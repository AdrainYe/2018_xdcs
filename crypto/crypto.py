# -*- coding:utf-8 -*-
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_v1_5 as Cipher_pkcs1_v1_5
import base64

# flag=raw_input('flag:')
# if len(flag)!=24:
#     print "error"
#     exit()

# m1=[[2,0,2,1],[1,1,1,3],[0,2,1,1],[1,2,2,2]]
# str1=''
# for x in range(0,6):
#     for i in range(0,4):
#         temp=0
#         for j in range(0,4):
#             temp+=(m1[i][j]*ord(flag[j+x*4]))
#         str1+=chr(temp%127)
# str=base64.b64encode(str1)
key=RSA.construct((671324462536968428410014551513473347299601696475208812089294301468451027562593426238565048780993844277878626758177783412886023963328628465361357522066471764587243680938024258444846871399197189648025933880162906096727505785102913531352404570218756183874821476578841846597002366841706431519593337189767198532219L,496634528129095546468419492730125270079411073432234506866778647972037407530387305875002373480364264764869517752433054844614609519461713162028014382920946930899507082224675930948997489965458527917025717553094565268571647097385183723383858725078244053209655899557160832624802683427564618585269464653436409818093L))
cipher = Cipher_pkcs1_v1_5.new(key)
# cipher_text = base64.b64encode(cipher.encrypt(str))
# print cipher_text
cipher_text = 'Apd+hjYzvXh6uYTvwosDHG1yVPqK7vCyLgy8mH7oxAE41RNll6RrPCCZDYn5AUv4rSR+Ffe67RXtKoA0fUm2k+myU2UdcEkDPB0tEZhL6bC+Q7eK1uAgDgwGQLQxpnLbYg/nCLIos9QDogySh5UeCFC7vf+UiD9BzVEZyoIYxHGk'
s = base64.b64decode(cipher_text)
cipher.decrypt(s)